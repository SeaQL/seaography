//! `SeaORM` Entity, @generated by sea-orm-codegen 2.0.0-rc.14

use sea_orm::entity::prelude::*;

#[sea_orm::model]
#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "staff")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub staff_id: i16,
    pub first_name: String,
    pub last_name: String,
    pub address_id: i32,
    pub reports_to_id: Option<i16>,
    #[sea_orm(column_type = "Blob", nullable)]
    pub picture: Option<Vec<u8>>,
    pub email: Option<String>,
    pub store_id: i32,
    pub active: i16,
    pub username: String,
    pub password: Option<String>,
    pub last_update: DateTimeUtc,
    #[sea_orm(
        belongs_to,
        from = "address_id",
        to = "address_id",
        on_update = "Cascade",
        on_delete = "NoAction"
    )]
    pub address: HasOne<super::address::Entity>,
    #[sea_orm(has_many)]
    pub payments: HasMany<super::payment::Entity>,
    #[sea_orm(has_many)]
    pub rentals: HasMany<super::rental::Entity>,
    #[sea_orm(
        self_ref,
        relation_enum = "SelfRef",
        from = "reports_to_id",
        to = "staff_id",
        on_update = "Cascade",
        on_delete = "NoAction"
    )]
    pub staff: HasOne<Entity>,
    #[sea_orm(
        belongs_to,
        from = "store_id",
        to = "store_id",
        on_update = "Cascade",
        on_delete = "NoAction"
    )]
    pub store: HasOne<super::store::Entity>,
}

impl ActiveModelBehavior for ActiveModel {}
