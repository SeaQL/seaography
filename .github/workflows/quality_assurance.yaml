name: Testing
'on': push
jobs:
    check:
        name: Check
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
            - uses: actions-rs/cargo@v1
              with:
                  command: check
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
            - uses: actions-rs/cargo@v1
              with:
                  command: test
                  args: '--workspace'
    fmt:
        name: Format
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
            - run: rustup component add rustfmt
            - uses: actions-rs/cargo@v1
              with:
                  command: fmt
                  args: '--all -- --check'
    clippy:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
            - run: rustup component add clippy
            - uses: actions-rs/cargo@v1
              with:
                  command: clippy
                  args: '-- -D warnings'
    integration-sqlite:
        name: SQLite integration tests
        runs-on: ubuntu-latest
        needs:
            - check
            - test
        steps:
            - uses: actions/checkout@v2
            - uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
            - name: Remove generated folder
              run: rm -rf ./examples/sqlite/src
            - uses: actions-rs/cargo@v1
              with:
                  command: run
                  args: 'sqlite://chinook.db generated ./examples/sqlite'
            - name: Integration tests
              working-directory: ./examples/sqlite
              run: cargo test
    integration-mysql:
        name: MySQL integration tests
        runs-on: ubuntu-latest
        needs:
            - check
            - test
        services:
            mysql:
                image: 'mysql:5.7'
                env:
                    MYSQL_HOST: 127.0.0.1
                    MYSQL_DB: mysql
                    MYSQL_USER: sea
                    MYSQL_PASSWORD: sea
                    MYSQL_ALLOW_EMPTY_PASSWORD: yes
                    MYSQL_ROOT_PASSWORD: ''
                ports:
                    - '3306:3306'
                options: >-
                    --health-cmd="mysqladmin ping" --health-interval=10s
                    --health-timeout=5s --health-retries=3
        steps:
            - uses: actions/checkout@v2
            - uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
            - name: Remove generated folder
              run: rm -rf ./examples/mysql/src
            - name: Create DB
              run: mysql -uroot -h 127.0.0.1 mysql -e 'CREATE DATABASE `sakila`'
            - name: Grant Privilege
              run: mysql -uroot -h 127.0.0.1 mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'sea'@'%'"
            - name: Import DB Schema
              run: mysql -uroot -h 127.0.0.1 sakila < sakila-schema.sql
              working-directory: ./examples/mysql
            - name: Import DB Data
              run: mysql -uroot -h 127.0.0.1 sakila < sakila-data.sql
              working-directory: ./examples/mysql
            - uses: actions-rs/cargo@v1
              with:
                  command: run
                  args: 'mysql://sea:sea@127.0.0.1/sakila generated ./examples/mysql'
            - name: Integration tests
              working-directory: ./examples/mysql
              run: cargo test
